# HTTP リクエストを HTTPS へリダイレクトする設定
server {
    listen       80;
    server_name  localhost;  # ※必要に応じてドメイン名に変更
    return 301 https://$host$request_uri;
}

# HTTPS 用サーバー設定（相互TLS認証：サーバー認証＋クライアント認証）
server {
    listen       443 ssl;
    server_name  localhost;  # ※必要に応じてドメイン名に変更

    # ドキュメントルートとデフォルトのインデックスファイル設定
    root   /var/www/html/public;
    index  index.php index.html;

    # セキュリティ用ヘッダー（Service Worker 利用時に必要）
    add_header Cross-Origin-Embedder-Policy require-corp;
    add_header Cross-Origin-Opener-Policy same-origin;

    # サーバー認証用SSL証明書（PC用に作成した証明書）
    ssl_certificate     /etc/nginx/ssl/server-cert.pem;
    ssl_certificate_key /etc/nginx/ssl/server-key.pem;

    # 相互TLS認証用
    ssl_client_certificate /etc/nginx/ssl/ca-cert.pem;
    ssl_verify_client off;

    # Service Worker のキャッシュ制御・アクセス許可設定
    location = /service-worker.js {
        default_type application/javascript;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Service-Worker-Allowed "/";
        try_files $uri =404;
    }

    # 通常のリクエスト処理
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # favicon と robots.txt はログを抑制
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # 404 エラーは index.php へ転送
    error_page 404 /index.php;

    # PHP の処理（fastcgi_pass の先はバックエンドのコンテナ名やIP・ポートに合わせる）
    location ~ \.php$ {
        fastcgi_pass main-app:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # 隠しファイル（.で始まるファイル）を well-known を除いて拒否
    location ~ /\.(?!well-known).* {
        deny all;
    }
}
